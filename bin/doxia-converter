#!/bin/bash
#
#

echo Converting $1 to markdown

intermediate=docbook
doxiajar=~/.m2/repository/org/apache/maven/doxia/doxia-converter/1.3-SNAPSHOT/doxia-converter-1.3-SNAPSHOT-jar-with-dependencies.jar
infile=$1
outinter=/tmp/$(echo $infile | sed -e s,.apt.vm,.${intermediate},g)
outmd=$(echo $infile | sed -e s,.apt.vm,.md,g | sed -e s,apt/,markdown/,g)

cp -p ${infile} ${infile}.tmp

perl -pi -e 's,\xa0, ,g' ${infile}.tmp
perl -pi -e 's,Hadoop MapReduce Next Generation,Hadoop,g' ${infile}.tmp
perl -pi -e 's,Hadoop NextGen MapReduce,Hadoop,g' ${infile}.tmp
perl -pi -e 's,^(\s*)Hadoop \${project.version} - (.*)$,$1Hadoop - $2,g' ${infile}.tmp
perl -pi -e 's,^(\s*)Hadoop - ,$1Hadoop: ,g' ${infile}.tmp
perl -pi -e 's,\$\{project.version\},MAVEN_PROJECT_VERSION,g' ${infile}.tmp
perl -pi -e 's,\$\{maven.build.timestamp\},MAVEN_BUILD_TIMESTAMP,g' ${infile}.tmp
perl -pi -e 's,http://<nn_host:port>/,http://nn_host:port/,g'  ${infile}.tmp
perl -pi -e 's,http://<rm_host:port>/,http://rm_host:port/,g'  ${infile}.tmp
perl -pi -e 's,http://<jhs_host:port>/,http://jhs_host:port/,g'  ${infile}.tmp
#perl -ni -e 'print unless /\%{toc/' ${infile}.tmp
perl -pi -e 's,“,\",g' ${infile}.tmp
perl -pi -e 's,”,\",g' ${infile}.tmp


java -jar ${doxiajar} \
     -in ${infile}.tmp \
     -from apt \
     -out ${outinter} \
     -outEncoding UTF-8 \
     -to ${intermediate} 

pandoc --from=docbook \
        --to=markdown_github \
        --output=${outmd}.tmp \
	${outinter}

cat <<EOF > $$
<!---
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

EOF

# ClusterSetup.md
perl -pi -e 's, \* Download,\n* Download,'  ${outmd}.tmp
perl -pi -e 's,    -,  -,g' ${outmd}.tmp 
perl -pi -e 's,-   ,* ,g' ${outmd}.tmp
perl -pi -e 's,\|:----+,\|:----,g' ${outmd}.tmp
cat ${outmd}.tmp | perl -e ' while(<>) {
        $line=$_;

        if ($line =~ /:----/) {
                $whoa=1;
                next;
        }

        print $line;

        if ($whoa) {
                $counter=$line=~ tr,|,,;
                $counter--;
                foreach ($i=0;$i<$counter;$i++) {
                	print "|:----";
		}
		print "|\n";
        }
        $whoa=0;
}
' > ${outmd}.tmp.1
mv ${outmd}.tmp.1 ${outmd}.tmp

perl -pi -e 's,\s*\|, \|,g' ${outmd}.tmp
perl -pi -e 's,^\s*\|,\|,g' ${outmd}.tmp
perl -pi -e 's,MAVEN_PROJECT_VERSION,\${project.version},g' ${outmd}.tmp

#cat ${outmd}.tmp | perl -e ' while(<>) {
#        $line=$_;
#
#        if ($whoa) {
#          if ($line =~ /^\|/ ) {
#            print "  ";
#          }
#        }
#
#        if ($line =~ /^\s*\*/) {
#                $whoa=1;
#        } elsif ($line =~ /^$/) {
#                ;
#        } elsif ($line =~ /^\|/) {
#                ;
#        } elsif ($line =~ /^\s*[^\*]/) {
#                $whoa=0;
#        }
#        print $line;
#}
#' > ${outmd}.tmp.1
#mv ${outmd}.tmp.1 ${outmd}.tmp

cat $$ ${outmd}.tmp > ${outmd}

if grep -q \${project.version} ${outmd}; then
  mv ${outmd} ${outmd}.vm
fi

rm $$ ${outmd}.tmp ${infile}.tmp
